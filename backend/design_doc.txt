Design Doc for Project ACE
--------------------------------
Objective: create a central web app that stores and sends info to students and teachers for the PBL School System.
-related to Pseudo-Plastic Flow
Started: 11/18/2019

'-' means I need to do this
'+' means I have completed this
'o' means I am currently working on this
'x' means I skipped this or didn't need to do this.
'n' means notes

Design
Properties

backend will be django API
frontend will be react + Axios

backend will be created first
  student profiles
  teacher profiles
  simple database system (use postgresql or whatever is free and simple). Try SQAlchemy with python
  admin profiles

frontend will be created last

--------------------------------
Applications to Create
--------------------------------

Project related

- Student uploading project proposals to their profile
- Student uploading pre-approved projects for teachers to review
- Teacher view of student profiles
- Teacher marking project acceptance or rejection for
- Independent Reviewer acceptance or rejection of original project
- Tree list of Pre-approved projects base on subject (this actually needs to look good)
- Teacher queue

Core Functionality

- Student Voting System
  - Tree List of classes and teachers
  - Student Class nomination
- Classroom Decibel monitor
- Public Hallway Screen showing permissed travel for which students
- Card swipe data for student IDs
- Teacher Advising session and for which students
- 

Quality of Life

- Student view of teacher profiles
- Teachers can upload resources for classes on their profile


--------------------------------
Backend: Django API
--------------------------------

TODO Checklist

- Set up Django API backend
- Set up a database server for the backend.
- Use heroku to serve the site

--------------------------------
Frontend: React+Axios
--------------------------------

TODO Checklist

- download npm
- download React
- download Axios

--------------------------------
Steps
--------------------------------

1. Create a virtual environment for the project with django and django rest apis.
  + look at the most recent version of django
    x determine python version compatibility
  x create the pipenv with a specific version of python
x 2. Figure out how to link the backend to a postgresql database on heroku.
n I completed hosting on postgresql, YAY
o 3. Design what tables will be needed to store information.
4. Look at how to 